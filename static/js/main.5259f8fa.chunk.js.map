{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","support","onClick","togglemode","role","htmlFor","placeholder","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","length","split","Alert","alert","class","Type","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5259f8fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.support}</a>\r\n        </li>\r\n      </ul>\r\n    <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'light'}`}>\r\n     <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n     <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n     </div>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={title : PropTypes.string,\r\n                about : PropTypes.string,\r\n                 support : PropTypes.string}\r\n\r\nNavbar.defaultProps={\r\n      title: 'TITLE',\r\n      about: 'About',\r\n      support: 'Support'\r\n}\r\n\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text,setText]=useState('Enter text here');\r\n    const handleOnChange = (event)=>{\r\n    //  console.log(\"on change\");\r\n     setText(event.target.value);\r\n    }\r\n    const handleUpClick = ()=>{\r\n    //  console.log(\"Uppercase is clicked\");\r\n     let newtext=text.toUpperCase();\r\n     setText(newtext)\r\n     props.showAlert('Converted to uppercase','success'); \r\n    }\r\n    const handleLoClick = ()=>{\r\n    //  console.log(\"Uppercase is clicked\");\r\n     let newtext=text.toLowerCase();\r\n     setText(newtext)\r\n     props.showAlert('Converted to lowercase','success');\r\n    }\r\n    const handleClear = ()=>{\r\n    //  console.log(\"Uppercase is clicked\");\r\n     let newtext=\"\";\r\n     setText(newtext)\r\n     props.showAlert('Content cleared','success');\r\n    }\r\n  return (\r\n    <div>\r\n<div className=\"mb-3\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n    <h2>{props.heading}</h2>\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"mybox\" rows=\"10\" style={{\r\n    backgroundColor: props.mode==='dark'?'#323232':'white' , color : props.mode==='dark'?'white':'black'\r\n  }} ></textarea>\r\n  <button className=\"btn btn-dark my-2 mx-1\" onClick={handleUpClick}  style={{\r\n    backgroundColor: props.mode==='dark'?'black':'white' , color : props.mode==='dark'?'white':'black'}}>Convert to Uppercase</button>\r\n  <button className=\"btn btn-dark my-2 mx-1\" onClick={handleLoClick}  style={{\r\n    backgroundColor: props.mode==='dark'?'black':'white' , color : props.mode==='dark'?'white':'black'}}>Convert to Lowercase</button>\r\n  <button className=\"btn btn-dark my-2 mx-1\" onClick={handleClear}  style={{\r\n    backgroundColor: props.mode==='dark'?'black':'white' , color : props.mode==='dark'?'white':'black'}}>Clear</button>\r\n</div>\r\n<div style={{color : props.mode==='dark'?'white':'black'}}>\r\n    <h2>Text Summary</h2>\r\n    <p>{text.length===0?0:text.split(\" \").length} Words and {text.length} Characters</p>\r\n    <p>{text.length===0?0:0.008*text.split(\" \").length} Minute read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:'write sameting'}</p>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize= (word)=>{\r\n        const lower=word.toLowerCase();\r\n        \r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n\r\n      props.alert && <div class={`alert alert-${props.alert.Type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{capitalize(props.alert.Type)}</strong>: {props.alert.msg}\r\n</div>\r\n    \r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, {useState} from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAlert= (message,type)=>{\n      setAlert({\n        msg:message,\n        Type:type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      },1500);\n  }\n  const togglemode =()=>{\n    if(mode === 'dark'){\n      setMode('light');\n      document.body.style.backgroundColor ='white';\n      showAlert('light mode is enabled','success');\n    }\n    else{\n      setMode('dark');\n      document.body.style.backgroundColor ='#323232';\n      showAlert('dark mode is enabled','success');   \n    }\n\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title='TextUtils' mode={mode} togglemode={togglemode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About />}/> */}\n          {/* <Route path=\"/\" element={}/> */}\n          <Textform showAlert={showAlert} heading=\"Enter your Text below\" mode={mode}/>\n      {/* </Routes>  */}\n    </div>\n    {/* </Router> */}\n    \n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}